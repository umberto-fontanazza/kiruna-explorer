{
  // Place your kiruna-explorer workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Express async middleware": {
    "scope": "typescript",
    "prefix": "!async middleware",
    "body": [
      "async (request: Request, response: Response, next: NextFunction) => {",
      "response.send({ message: \"To be implemented\"}) //TODO: implement",
      "}",
    ],
    "description": "Define a new middleware",
  },
  "Unimplemented error": {
    "scope": "typescript",
    "prefix": "!unimplemented",
    "body": ["throw new Error(\"Unimplemented!\"); //TODO: implement"],
    "description": "Unimplemented placeholder",
  },
  "Sleep": {
    "scope": "typescript",
    "prefix": "!sleep",
    "body": [
      "await new Promise(r => setTimeout(r, ${1:seconds}*1000)); //TODO: remove",
    ],
    "description": "Synchronously sleep for x seconds",
  },
}
